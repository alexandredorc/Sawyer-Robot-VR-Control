import rospy
import sys
import moveit_commander
from geometry_msgs.msg import Pose, Point
from std_msgs.msg import Float32MultiArray
import threading

def hydra_callback(msg):
    global target_position
    target_position = msg.data

def main():
    global target_position

    # Initialize the moveit_commander
    moveit_commander.roscpp_initialize(sys.argv)
    rospy.init_node('sawyer_hydra_follow_moveit')

    # Subscribe to the 'hydra_calib' topic
    rospy.Subscriber("hydra_calib", Float32MultiArray, hydra_callback)

    # Initialize the robot and MoveGroupCommander for the arm
    robot = moveit_commander.RobotCommander()
    group = moveit_commander.MoveGroupCommander("right_arm")

    rate = rospy.Rate(100)  # 100 Hz update rate

    while not rospy.is_shutdown():
        if target_position is not None:
            # Convert Hydra position to a Pose message
            target_pose = Pose()
            target_pose.position.x = target_position[0]
            target_pose.position.y = target_position[1]
            target_pose.position.z = target_position[2]

            # Set target pose and plan
            group.set_pose_target(target_pose)
            plan = group.plan()

            # Execute the plan
            group.execute(plan)

        rate.sleep()

    moveit_commander.roscpp_shutdown()

if __name__ == '__main__':
    try:
        target_position = None
        main()
    except rospy.ROSInterruptException:
        pass
